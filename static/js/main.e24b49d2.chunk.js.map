{"version":3,"sources":["components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","useState","aName","setName","aReview","setReview","sub","setSub","showrev","setshow","setId","newRev","setNewrev","aList","setList","useEffect","Axios","get","then","response","data","console","log","className","type","placeholder","onChange","e","target","value","onClick","ident","uuidv4","an_id","anime","review","post","user_id","Anime_Name","Anime_Review","alert","window","location","reload","map","val","id","delete","style","color","rev","put","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAgIeA,MAxHf,WACI,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAmBJ,oBAAS,GAA5B,mBAAOK,EAAP,KAAWC,EAAX,KACA,EAAuBN,oBAAS,GAAhC,mBAAMO,EAAN,KAAcC,EAAd,KACA,EAAmBR,mBAAS,IAA5B,mBAAYS,GAAZ,WACA,EAAyBT,mBAAS,IAAlC,mBAAOU,EAAP,KAAcC,EAAd,KACA,EAAsBX,mBAAS,IAA/B,mBAAOY,EAAP,KAAaC,EAAb,KAsEA,OARAC,qBAAU,WACPC,IAAMC,IAAI,iCAAiCC,MAAK,SAACC,GAC9CL,EAAQK,EAASC,WAEnB,IAELC,QAAQC,IAAI,KAGP,sBAAKC,UAAU,iBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,SACK,gDAEL,sBAAKA,UAAU,aAAf,UAEI,uBAAOC,KAAK,OAAOC,YAAY,aAAaC,SAAU,SAACC,GAAKxB,EAAQwB,EAAEC,OAAOC,UAC7E,0BAAUL,KAAK,OAAOC,YAAY,+BAA+BC,SAAU,SAACC,GAAKtB,EAAUsB,EAAEC,OAAOC,UAEpG,wBAAQN,UAAU,WAAWC,KAAK,SAASM,QA/EpC,WACf,GAAI5B,GAAQE,EAGR,CACJ,IAAM2B,EAAMC,cACZtB,EAAMqB,GAENxB,GAAQD,GACRQ,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CACdoB,MAAMF,EACNG,MAAMhC,EACNiC,OAAO/B,MAEXiB,QAAQC,IAAIS,GACZf,IAAMoB,KAAK,mCAAmC,CAACC,QAAQN,EAAMO,WAAWpC,EAAMqC,aAAanC,SAbvFoC,MAAM,mBAeZC,OAAOC,SAASC,UA8DN,0BAIH9B,GAAO,qBAAKU,UAAU,mBAAf,SACNV,EAAM+B,KAAI,SAACC,GACT,OACI,qBAAKtB,UAAU,iBAAf,SACQ,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,WAAf,UACE,6BAAKsB,EAAIX,QACT,cAAC,IAAD,CAAsBX,UAAU,QAAQO,QAAS,WArE1D,IAACgB,IAqE2ED,EAAIZ,MApE/FjB,IAAM+B,OAAN,2CAAiDD,IAQrDzB,QAAQC,IAAI,WACZmB,OAAOC,SAASC,eA6DU,sBAAKpB,UAAU,WAAf,UAEA,8BACA,uBAAOyB,MAAO,CAACC,MAAM,mBAAoBzB,KAAK,OAAOC,YAAaoB,EAAIV,OAAQT,SAAU,SAACC,GAAKf,EAAUe,EAAEC,OAAOC,QAASN,UAAU,cAIrI,cAAC,IAAD,CAAgBA,UAAU,OAAOO,QAAS,WA3DlD,IAACgB,EAAGI,EAAHJ,EA2DiED,EAAIZ,MA3DlEiB,EA2DwEL,EAAIV,OAzD/F1B,GAASD,GACLG,EAIFK,IAAMmC,IAAN,2CAA8CL,GAAK,CACjDb,MAAMa,EACNZ,MAAMhC,EACNiC,OAAOxB,IANTC,EAAUsC,GAahBT,OAAOC,SAASC,mBA6BuCE,EAAIZ,gBC7F9CmB,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCOS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e24b49d2.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Axios from'axios';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as MdIcons from 'react-icons/md'\r\nimport * as aiIcons from 'react-icons/ai'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Main.css'/* \r\nconst {v4:uuidv4}=require('uuid') */\r\nfunction Main() {\r\n    const [aName,setName]=useState('');\r\n    const [aReview,setReview]=useState('');\r\n    const [sub,setSub]=useState(false);\r\n    const[showrev,setshow]=useState(true)\r\n    const [a_id,setId]=useState('');\r\n    const [newRev,setNewrev]=useState('')\r\n    const [aList,setList]=useState([]);\r\n\r\n    const handleSubmit=()=>{\r\n        if(!aName||!aReview){\r\n            alert('Give some input')\r\n        }\r\n        else{\r\n        const ident=uuidv4()\r\n        setId(ident)\r\n        /* alert(`Anime Name:${aName}\\nAnime Review:${aReview}`); */\r\n        setSub(!sub);\r\n        setList([...aList,{\r\n            an_id:ident,\r\n            anime:aName,\r\n            review:aReview\r\n        }])\r\n        console.log(ident)\r\n        Axios.post('http://localhost:5000/api/insert',{user_id:ident,Anime_Name:aName,Anime_Review:aReview})\r\n      }\r\n      window.location.reload()\r\n      \r\n       \r\n    }\r\n    const handleDelete=(id)=>{\r\n        Axios.delete(`http://localhost:5000/api/delete/${id}`);\r\n       \r\n       /*  Axios.get('http://localhost:5000/api/get').then((resp)=>{\r\n          setList(resp.data);\r\n          console.log(aList)\r\n    }) */\r\n\r\n   \r\n    console.log('clicked')\r\n    window.location.reload()\r\n  \r\n       \r\n    }\r\n   /*  const handleEdit=(id)=>{\r\n      setshow(!showrev)\r\n       \r\n\r\n    } */\r\n    const handleEdit=(id,rev)=>{\r\n      /* const identity=uuidv4(); */\r\n      setshow(!showrev)\r\n      if(!newRev){\r\n        setNewrev(rev)\r\n      }\r\n      else{\r\n        Axios.put(`http://localhost:5000/api/update/${id}`,{\r\n          an_id:id,\r\n          anime:aName,\r\n          review:newRev\r\n      })\r\n      }\r\n      \r\n    \r\n\r\n  /* setshow(!showrev); */\r\n  window.location.reload();\r\n\r\n    }\r\n    useEffect(()=>{\r\n       Axios.get('http://localhost:5000/api/get').then((response)=>{\r\n          setList(response.data)\r\n    })\r\n     } ,[])\r\n\r\n   console.log('x')\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n          <div className=\"main-wrapper\">\r\n            <div className='main-head'>\r\n                 <h3>Anime Review</h3>\r\n            </div>\r\n            <div className='main-input'>\r\n\r\n                <input type='text' placeholder='Anime name' onChange={(e)=>{setName(e.target.value)}}></input>\r\n                <textarea type='text' placeholder='User-sama, Give your review ' onChange={(e)=>{setReview(e.target.value)}}></textarea>\r\n                \r\n                <button className='main-btn' type='submit' onClick={handleSubmit}>Submit</button>\r\n\r\n            </div>\r\n            </div>\r\n            {aList&&<div className='review-container'>\r\n            { aList.map((val)=>{\r\n                return (\r\n                    <div className=\"review-wrapper\" key={val.an_id}>\r\n                            <div className=\"reviews\" >\r\n                              <div className='rev-head'>\r\n                                <h3>{val.anime}</h3>\r\n                                <aiIcons.AiFillDelete className='trash' onClick={()=>{handleDelete(val.an_id)}}></aiIcons.AiFillDelete>\r\n                              </div>\r\n                              <div className='rev-main'>\r\n                             \r\n                              <div>\r\n                              <input style={{color:\"rgb(80, 14, 94)\"}} type='text' placeholder={val.review} onChange={(e)=>{setNewrev(e.target.value)}} className='inp-rev'></input>\r\n                             { /* <MdIcons.MdDone onClick={()=>{handleRev()}}></MdIcons.MdDone> */}\r\n                              </div>\r\n                        \r\n                             <FaIcons.FaEdit className='edit' onClick={()=>{handleEdit(val.an_id,val.review)}}/>\r\n                            </div>\r\n                            </div>\r\n                    </div>\r\n                    )\r\n            })}\r\n            </div>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import './App.css';\nimport Main from './components/Main';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}